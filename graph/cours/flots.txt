Definitions : 

Un réseau de flot est un graphe G = (V, A, c)
 avec c : A -> N : a -> c(a). On distingue une source et un puits t.

|__ Hypothèses : 1) Capacités entières 
                 2) les arcs n'existent que dans un sens (et le réseau est simple)

Un flot pour un réseau G = (V, A, c) est une fonction f : A -> N : a -> f(a)

|
|__ 1) contrainte de capacité : Pour tout (u, v) appartenant à A : 0 <= f(u, v) <= c(u, v)
    2) conservation des flots : Pour tout v appartenant à V privé de {s, t} :
     La somme de f(u, v) avec u appartenant aux predecesseurs de v = la somme des f(v, w) avec w appartenant à succ(v)

Le problème du flot maximum 
Entrée : réseau de flot G = (V, A, c)
Sortie : un flot f dont la valeur |f| est max.

La valeur du flot f est la somme de f(s, v) avec v appartenant aux succ(s) = |f| = somme de f(w, t) avec w appartenant aux pred(t)


Exemple : 

Schéma fig : 1) Un arc tel que f(u, v) = c(u, v) est saturé

Algorithme pour le problème du flot max : 

|__ Ford-Fulkeuson (O(|V| |A|²))

Dimitz : O(|V|² |A|) (mais améliorable en O(|V||A|log|V|))

.
.
.
préflots
.
.
.
2013 : Orlin : O(|V||A|)

Méthode de Ford-Fulkerson :

tant qu'il existe un chemin augmentant : -> Nombre d'itérations O(|V| |A|)

    1) Chercher un chemin augmentant P dans le réseau résiduel Gf -> O(|V| + |A|)
    2) Augmenter le flot au maximum sur P                         -> O(|V|) <= O(|A|)
    3) mettre à jour Gf                                           -> O(|V|) <= O(|A|)
                                                                  |-> O(|V| |A|²)

Etant donnés un réseau G = (V, A, c) et un flot f, les capacités résiduelles sont définies par : 

             -c(u, v) - f(u, v)  si (u, v) appartient à A
cf(u, v) = { -f(v, u)            si (v, u) appartient à A
             -0                  sinon


G : 

figure 2) 

|

Figure 3)

Autre exemple : Figure 4)

Recherche d'un chemin augmentant : 

= recherche dans Gf d'un chemin de s à t
|
|_ parcours en profondeur
|_ '          'largeur -> Edmonds-Karp <= O(|V||A|) itérations de la boucle principale
|_ '          '???
            

Exemple (Ford - Fulkerson - Edmonds - Karp)

Figure 4)


Coupes dans un réseau de flot

Une coupe est un bipartition de V = SUT avec s appartient à S et t appartient à T.

La capacité d'une coupe (S, T) est c(S, T) = la somme de la somme de c(u, v)

Elle est minimum si elle n'appartient pas à (S',T') avec c(S', T') < c(S, T).


.       .
.       .
.   =>  .
.       .
.       .
src     puits

Ford-Fulkerson
|
|__Edmonds-Karp : parcours largeur O(|V||A|) itérations
=> complexité : O(|V||A|²)
Coupes
Une coupe est un réseau de flot G = (V, A, c)
de source s et puits t est une bipartition V = S union T avec s appartient à S et t appartient à T

Théorème "max_flow_min_cut"

Soit un réseau G = (V, A, c) de source s et puis t et f un flot sur G. Les conditions suivantes sont équivalentes :

1) f est un flot max
2) le réseau résiduel Gf ne contient pas de chemin augmentant
3) Il existe une coupe (S, T) pour G telle que |f| = c(S, T)



Lemme1 : Soit un réseau G = (V, A, c), une coupe(S, T) et un flot f pour G. Alors
|f| = f(S, T)
Corollaire : Soit un réeau  G = (V, A, c), et une coupe (S, T)
                            et un flot f. Alors |f| <= c(S, T)
P: |f| = f(S, T) = somme de la somme de f(u, v) avec u appartient ) S et T apparteint à T - la somme de la somme de f(u, v) avec
u appartenant à T et v appartenant à S.



